<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tmrMain.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="tmrTimeout.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>127, 25</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayHeight" type="System.Int32, mscorlib">
    <value>25</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAAAAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABIAAAAAAAAAAAAAAAEAAAAA
        AAB4QAAAKDCgAAAAAAD///8AAMj/ABiQUAAQoOgAQKhwAJhwSAA4QKgAALjQANjIsABQWLAAGLDQAOjg
        0ACAyKAAELCoAGC4iACoiGgASHhwAHiAyABYYEAAcEgYAIBIGAAo0P8AKJhYABCgcAAYmFgA0Pj/AADA
        2ABIcGAAGMj/AJjQsACo2MAAyLCQAKCo2AAQiNgAsLjgAIiQyABQsHgAyOjYANjw4AC4kHgAwMDoAMCg
        gAAgWLgAMJCgAFBoUAAomLAAGGjAAOD4/wDg0MAAALDwADjQ/wCA6P8ASNj/AMD4/wD4+PAA+P/4APj4
        /wDY2PAAQEiwANDQ6AAAwPAAsPD/AAC4yAAQoIAAAKjoAJDo/wBY2P8A8P//AADA+AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIFBQUFBQUFBQUFBQUFBQICAQEBAQEBAQEBAQEBAQEUAgICAgIC
        AgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIHBQUFBQUFBQUFBQUFBQcCAgEBAQEBAQEBAQEBAQEJAgIC
        AgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAgICBQUFBQUFBQUFBQUFBQUCAgEBAQEBAQEBAQEBAQEB
        AgICAgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAgICBQUFBQUFBQUFBQUFBQcCAgEBAQEBAQEBAQEB
        AQEBAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAgICBQUFBQUFBQUFBQUFBQUCAgkBAQEBAQEB
        AQEBAQEBAgICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAAAAgICJwUFBQUFBQUFBQUFBQUCAgIBAQEB
        AQEBAQEBAQEBDAICAgICAgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAICAgUFBQUFBQUFBQUFBQUZAgIB
        AQEBAQEBAQEBAQEBAQICAgICAgICAgICAhcAAAAAAAAAAAAAAAAAAAAAAAICAgUFBQUFBQUFBQUFBQUR
        AgIBAQEBAQEBAQEBAQEBDAICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAICAgUFBQUFBQUFBQUF
        BQUZAgI9AQEBAQEBAQEBAQEBAQICAgICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAgCAgIFBQUFBQUF
        BQUFBQUFAgICAQEBAQEBAQEBAQEBARQCAgICAgICAgICAgICAgAAAAAAAAAAAAAAAAAAAAACAgIFBQUF
        BQUFBQUFBQUFBwICAQEBAQEBAQEBAQEBAQkCAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAASAgIF
        BQUFBQUFBQUFBQUFBQICAQEBAQEBAQEBAQEBAQECAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAC
        AgIFBQUFBQUFBQUFBQUFBwICAQEBAQEBAQEBAQEBAQkCAgICAgICAgICAgICAgICAAAAAAAAAAAAAAAA
        AAAIAgICBQUFBQUFBQUFBQUFBQICAgEBAQEBAQEBAQEBAQECAgICAgICAgICAgICAgICAgAAAAAAAAAA
        AAAAAAAAAgICBQUFBQUFBQUFBQUFBQICAgEBAQEBAQEBAQEBAQEMAgICAgICAgICAgICAgICAgIAAAAA
        AAAAAAAAAAAAAgICBQUFBQUFBQUFBQUFBRkCAgEBAQEBAQEBAQEBAQEBAgICAgICAgICAgICAgICAgIC
        AAAAAAAAAAAAAAAAFgQEGwUFBQUFBQUFBQUFBQUCAgwBAQEBAQEBAQEBAQEBAgICAgICAgICAgICAgIC
        AgICAgAAAAAAAAAAAAAAFQQEBQUFBQUFBQUFBQUFBRsCAgEBAQEBAQEBAQEBAQEBAgICAgICAgICAgIC
        AgICAgICAhcAAAAAAAAAAAAAAAQEGgUFBQUFBQUFBQUFBQUEBAQBAQEBAQEBAQEBAQEBAgICAgICAgIC
        AgICAgICAgICAgIAAAAAAAAAAAAAAAQEBAUFBQUFBQUFBQUFBQU/BAQBAQEBAQEBAQEBAQEBCQICAgIC
        AgICAgICAgICAgICAgICAAAAAAAAAAAAAA0EBBoFBQUFBQUFBQUFBQVBBAQtAQEBAQEBAQEBAQEBAQIC
        AgICAgICAgICAgICAgICAgIcLgAAAAAAAAAAAAQEBAoFBQUFBQUFBQUFBQUaBAQGAQEBAQEBAQEBAQEB
        CQICAgICAgICAgICAgICAgICAgIcBBUAAAAAAAAAAAAEBAQKBQUFBQUFBQUFBQUFBAQEBgEBAQEBAQEB
        AQEBAQICAgICAgICAgICAgICAgICAgICBAQAAAAAAAAAAAAEBAQECgUFBQUFBQUFBQUFBAQEBAYBAQEB
        AQEBAQEBAQICAgICAgICAgICAgICAgICAgICNgQEAAAAAAAAAAANBAQEBAoFBQUFBQUFBQUFHQQEBAQG
        AQEBAQEBAQEBAQICAgICAgICAgICAgICAgICAgICAgQEBAAAAAAAAAATBAQEBAQKBQUFBQUFBQUFEAQE
        BAQEBgEBAQEBAQEBAQECAgICAgICAgICAgICAgICAgICAhgEBC8AAAAAAAANBAQEBAQECgUFBQUFBQUF
        GwQEBAQEBAYBAQEBAQEBAQEEBAICAgICAgICAgICAgICAgICAgIEBAQAAAAAAAAABAQEBAQEBAoFBQUF
        BQUFBQQEBAQEBAQGAQEBAQEBAQEEBAQCAgICAgICAgICAgICAgICAgICBAQEAAAAAAAADQQEBAQEBAQK
        BQUFBQUFBT8EBAQEBAQEBgEBAQEBAQE0BAQEAgICAgICAgICAgICAgICAgICAgQEBAAAAAAAEwQEBAQE
        BAQECgUFBQUFBUEEBAQEBAQEBAYBAQEBAQEkBAQEBAICAgICAgICAgICAgICAgICAgIEBDAAAAAAFgQE
        BAQEBAQEBAoFBQUFBUIEBAQEBAQEBAQGAQEBAQEBBAQEBAQCAgICAgICAgICAgICAgICAgICGAQWAAAA
        HgQEBAQEBAQEBAQKBQUFBQUEBAQEBAQEBAQEBgEBAQEBBAQEBAQEAgICAgICAgICAgICAgICAgICAgIE
        AAAAAAQEBAQEBAQEBAQECgUFBQUEBAQEBAQEBAQEBAYBAQEBRwQEBAQEAgICAgICAgICAgICAgICAgIC
        AgICHwAAABMEBAQEBAQEBAQEBAoFBQUdBAQEBAQEBAQEBARDAQEBBgQEBAQEBAICAgICAgICAgICAgIC
        AgICAgICAgIAABYEBAQEBAQEBAQEBAQKBQUQBAQEBAQEBAQEBAQEBAEBMQQEBAQEBDUCAgICAgICAgIC
        AgICAgICAgICAgICAB4EBAQEBAQEBAQEBAQECgUdBAQEBAQEBAQEBAQEBAQBAQQEBAQEBAICAgICAgIC
        AgICAgICAgICAgICAgICMxcCBAQEBAQEBAQEBAQEBAoFBAQEBAQEBAQEBAQEBAQEAQQEBAQEBAICAgIC
        AgICAgICAgICAgICAgICAgICAhICAgIfBAQEBAQEBAQEBAQKPwQEBAQEBAQEBAQEBAQEBDQEBAQEBAIC
        AgICAgICAgICAgICAgICAgICAgICAgIXAgICAjcEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        GAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjUEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQYAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQENgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkUEBAQEBAQEBAQE
        BAQENwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAv//////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////gAABgAGAAP+A
        AAMAAYAB/4AABwADAAP/AAAOAAYAB/8AABwADAAP/wAAOAAcAA//AAA4ABgAH/4AAHAAMAA//gAA4ABg
        AH/+AADgAOAAf/4AAcAAwAD//gABgAGAAf/8AAcAAwAD//wABwAHAAf//AAOAA4AB//8ABwADAAP//wA
        AAAYAB///AAAADAAP//4AAAAAAB///gAAAAAAH//+AAAAAAA///gAAAAAAH//8AAAAAAA///wAAAAAAH
        //+AAAAAAA///4AAAAAAD///AAAAAAAH//8AAAAAAAf//wAAAAAAB///AAAAAAAH//8AAAAAAAf//wAA
        AAAAB///gAAAAAAP//+AAAAAAA///8AAAAAAD///wAAAAAA///+QAAAAAH///7gAAAAA////vAAAAAH/
        ////AAAAB//////gAAA///////4AA///////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////
</value>
  </data>
</root>